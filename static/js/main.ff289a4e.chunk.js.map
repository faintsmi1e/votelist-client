{"version":3,"sources":["API/VoteService.ts","components/UI/InfoModal.tsx","components/VoteRow/VoteRow.tsx","components/UI/LanguageSelect.tsx","components/VoteList.tsx","hooks/useFetching.ts","App.tsx","index.tsx","components/VoteList.module.css","components/VoteRow/VoteRow.module.css"],"names":["VoteService","axios","get","API_URL","response","data","style","position","top","left","transform","width","maxWidth","bgcolor","border","boxShadow","p","InfoModal","props","row","Modal","open","onClose","handleClose","Box","sx","Typography","variant","component","mt","name","language","sex","provider","providerLanguage","id","VoteRow","React","useState","setOpen","Card","className","classes","VoteWrapper","CardContent","fontSize","color","gutterBottom","CardActions","Button","size","onClick","LanguageSelect","value","onChange","options","FormControl","minWidth","InputLabel","Select","labelId","event","target","label","MenuItem","map","option","VoteList","votes","setVotes","selectedSort","setSelectedSort","setOptions","callback","isLoading","setIsloading","error","setError","fetching","a","message","useFetching","getAll","optionsSet","Set","forEach","vote","add","Array","from","fetchVotes","isVotesLoading","votesError","useEffect","sortedVotes","filter","Votes","sort","console","log","CircularProgress","App","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.ff289a4e.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport { IVote } from '../models/IVote';\r\nconst API_URL = 'https://shrouded-lowlands-83585.herokuapp.com';\r\n\r\nclass VoteService {\r\n  \r\n  static async getAll(): Promise<IVote[]> {\r\n    \r\n      const response = await axios.get(API_URL + '/api' + '/votes');\r\n      return response.data;\r\n    \r\n  }\r\n\r\n}\r\n\r\nexport default VoteService;\r\n","import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\n\r\nimport Typography from '@mui/material/Typography';\r\nimport Modal from '@mui/material/Modal';\r\nimport { IVote } from '../../models/IVote';\r\n\r\nconst style = {\r\n  position: 'absolute' as 'absolute',\r\n  top: '50%',\r\n  left: '50%',\r\n  transform: 'translate(-50%, -50%)',\r\n  width: '100%',\r\n  maxWidth:'260px',\r\n  bgcolor: 'background.paper',\r\n  border: '2px solid #000',\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\n\r\nexport default function InfoModal(props: any) {\r\n  const row: IVote = props.row;\r\n  return (\r\n    <Modal {...props} open={props.open} onClose={props.handleClose}>\r\n      <Box sx={style}>\r\n        <Typography variant='h4' component='h2'>\r\n          Info\r\n        </Typography>\r\n\r\n        \r\n        <Typography sx={{ mt: 2 }}>{['name: ', row.name]}</Typography>\r\n        <Typography sx={{ mt: 2 }}>{['language: ', row.language]}</Typography>\r\n        <Typography sx={{ mt: 2 }}>{['sex: ', row.sex]}</Typography>\r\n        <Typography sx={{ mt: 2 }}>{['provider: ', row.provider]}</Typography>\r\n        <Typography sx={{ mt: 2 }}>{['provider language: ', row.providerLanguage]}</Typography>\r\n        <Typography sx={{ mt: 2 }}>{['id: ', row.id]}</Typography>\r\n      </Box>\r\n    </Modal>\r\n  );\r\n}\r\n","import React, { FC } from 'react';\r\nimport Card from '@mui/material/Card';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nimport { IVote } from '../../models/IVote';\r\nimport classes from './VoteRow.module.css';\r\nimport InfoModal from '../UI/InfoModal';\r\ninterface Props {\r\n  children: string;\r\n  row: IVote;\r\n  style?: React.CSSProperties;\r\n}\r\n\r\nconst VoteRow: FC<Props> = (props) => {\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n  const row = props.row;\r\n  return (\r\n    <Card className={classes.VoteWrapper}>\r\n      <CardContent>\r\n        <Typography sx={{ fontSize: 14 }} color='text.secondary' gutterBottom>\r\n          {row.language}\r\n        </Typography>\r\n        <Typography variant='h5' component='div'>\r\n          {row.name}\r\n        </Typography>\r\n      </CardContent>\r\n      <CardActions>\r\n        <Button size='small' onClick={handleOpen}>Learn More</Button>\r\n      </CardActions>\r\n      <InfoModal open={open} handleClose={handleClose} row={row}></InfoModal>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default VoteRow;\r\n","import React from 'react';\r\n\r\nimport FormControl from '@mui/material/FormControl';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport Select from '@mui/material/Select';\r\nimport MenuItem from '@mui/material/MenuItem';\r\n\r\nconst LanguageSelect = (props: any) => {\r\n  const {value, onChange} = props\r\n  const options: string[] = props.options;\r\n  \r\n  return (\r\n    <FormControl {...props} sx={{ minWidth: 80 }}>\r\n      <InputLabel id='select'>Lang</InputLabel>\r\n      \r\n      <Select\r\n        labelId='select'\r\n        id='demo-simple-select'\r\n        value={value}\r\n        onChange={event=> onChange(event.target.value)}\r\n        label='Age'\r\n      > <MenuItem  value=''>{'...'}</MenuItem>\r\n        {options.map((option: string, id) => {\r\n          return <MenuItem key={id} value={option}>{option}</MenuItem>;\r\n        })}\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default LanguageSelect;\r\n","import React, { FC, useEffect, useState } from 'react';\r\nimport VoteService from '../API/VoteService';\r\nimport { useFetching } from '../hooks/useFetching';\r\nimport { IVote } from '../models/IVote';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport VoteRow from './VoteRow/VoteRow';\r\nimport LanguageSelect from './UI/LanguageSelect';\r\nimport classes from './VoteList.module.css';\r\n\r\nconst VoteList: FC = () => {\r\n  const defaultVotesArray: IVote[] = [];\r\n  const [votes, setVotes] = useState(defaultVotesArray);\r\n  const [selectedSort, setSelectedSort] = useState('');\r\n  const defaultOptions: string[] = [];\r\n  const [options, setOptions] = useState(defaultOptions);\r\n\r\n  const [fetchVotes, isVotesLoading, votesError] = useFetching(async () => {\r\n    const votes = await VoteService.getAll();\r\n    setVotes(votes);\r\n    const optionsSet: Set<string> = new Set();\r\n    votes.forEach((vote) => {\r\n      optionsSet.add(vote.language);\r\n    });\r\n    setOptions(Array.from(optionsSet));\r\n  });\r\n\r\n  useEffect(() => {\r\n    fetchVotes();\r\n    //eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const getSortedVotes = () => {\r\n    if (selectedSort) {\r\n      return [...votes].filter((vote) => {\r\n        return vote.language === selectedSort;\r\n      });\r\n    }\r\n    return votes;\r\n  };\r\n\r\n  const sortedVotes = getSortedVotes();\r\n\r\n  const sortVotes = (sort: string) => {\r\n    setSelectedSort(sort);\r\n    console.log(sort);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.Votes}>\r\n      <LanguageSelect\r\n        className={classes.Select}\r\n        value={selectedSort}\r\n        onChange={sortVotes}\r\n        options={options}\r\n      ></LanguageSelect>\r\n      {isVotesLoading ? (\r\n        <div className='VoteList__leader-wrapper'>\r\n          <CircularProgress />\r\n        </div>\r\n      ) : (\r\n        <div className={classes.VoteList}>\r\n          {votesError && <h2>{votesError}</h2>}\r\n          {sortedVotes.map((vote) => {\r\n            return (\r\n              <VoteRow key={vote.id} row={vote}>\r\n                {' '}\r\n              </VoteRow>\r\n            );\r\n          })}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VoteList;\r\n","import { useState } from 'react';\r\n\r\nexport const useFetching = (callback: () => Promise<void>) => {\r\n  const [isLoading, setIsloading] = useState(false);\r\n  const [error, setError] = useState('');\r\n\r\n  const fetching = async () => {\r\n    try {\r\n      setIsloading(true);\r\n      await callback();\r\n    } catch (e: any) {\r\n      setError(e.message);\r\n    } finally {\r\n      setIsloading(false);\r\n    }\r\n  };\r\n  return [fetching, isLoading, error] as const;\r\n};\r\n","import React from 'react';\n\nimport './App.css';\nimport VoteList from './components/VoteList';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <VoteList></VoteList>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  \n    <App />\n  ,\n  document.getElementById('root')\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"VoteList\":\"VoteList_VoteList__1Nqb7\",\"Select\":\"VoteList_Select__33u5i\",\"Votes\":\"VoteList_Votes__OvmDi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"VoteWrapper\":\"VoteRow_VoteWrapper__2HOmJ\"};"],"sourceRoot":""}